{
  "name": "aws-serverless-express-example",
  "version": "2.1.1",
  "description": "Example application for running a Node Express app on AWS Lambda using Amazon API Gateway.",
  "main": "lambda.js",
  "config": {
    "s3BucketName": "YOUR_UNIQUE_BUCKET_NAME",
    "region": "YOUR_AWS_REGION",
    "cloudFormationStackName": "YOUR_SERVERLESS_EXPRESS_STACK_NAME",
    "functionName": "YOUR_SERVERLESS_EXPRESS_LAMBDA_FUNCTION_NAME",
    "accountId": "YOUR_ACCOUNT_ID"
  },
  "scripts": {
    "config": "node ./scripts/configure.js",
    "deconfig": "node ./scripts/deconfigure.js",
    "local": "node scripts/local",
    "invoke-lambda": "aws lambda invoke --function-name $npm_package_config_functionName --region $npm_package_config_region --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
    "create-bucket": "aws s3 mb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "delete-bucket": "aws s3 rb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "package": "aws cloudformation package --template ./cloudformation.yaml --s3-bucket $npm_package_config_s3BucketName --output-template packaged-sam.yaml --region $npm_package_config_region",
    "deploy": "aws cloudformation deploy --template-file packaged-sam.yaml --stack-name $npm_package_config_cloudFormationStackName --capabilities CAPABILITY_IAM --region $npm_package_config_region",
    "package-deploy": "npm run package && npm run deploy",
    "delete-stack": "aws cloudformation delete-stack --stack-name $npm_package_config_cloudFormationStackName --region $npm_package_config_region",
    "setup": "npm install && (aws s3api get-bucket-location --bucket $npm_package_config_s3BucketName --region $npm_package_config_region || npm run create-bucket) && npm run package-deploy",
    "install-global": "npm install -g supervisor http-server tsc-multi-watch",
    "start": "API_PORT=3010 npm run watch",
    "build": "npm run build-ts && npm run tslint",
    "serve": "node lib/server.js",
    "watch": "concurrently -k -p \"[{name}]\" -n \"TypeScript,Node\" -c \"cyan.bold,green.bold\" \"npm run watch-ts\" \"npm run watch-node\"",
    "watch-node": "nodemon lib/server.js",
    "build-ts": "tsc",
    "watch-ts": "tsc -w",
    "tslint": "tslint -c tslint.json -p tsconfig.json",
    "tslint-fix": "tslint --fix -c tslint.json -p tsconfig.json",
    "debug": "npm run build && npm run watch-debug",
    "serve-debug": "nodemon --inspect lib/server.js",
    "watch-debug": "concurrently -k -p \"[{name}]\" -n \"TypeScript,Node\" -c \"cyan.bold,green.bold\" \"npm run watch-ts\" \"npm run serve-debug\"",
    "ts-clear": "rm -fr lib/* && npm run build-ts",
    "test": "npm run test-ts",
    "test-ts": "mocha --timeout 15000 --watch --recursive src/**/*.spec.ts  --require ts-node/register --watch-extensions ts",
    "test-debug": "ndb mocha --timeout 15000 --watch --recursive src/**/*.spec.ts  --require ts-node/register --watch-extensions ts",
    "test-one": "mocha --timeout 90000 --watch --require ts-node/register --watch-extensions ts $1",
    "test-one-debug": "ndb mocha --timeout 90000 --watch --require ts-node/register --watch-extensions ts $1",
    "version": "node scripts/api-version",
    "host-ip": "node scripts/host-ip",
    "chown": "sudo chown -R $USER:$USER lib"
  },
  "license": "Apache-2.0",
  "dependencies": {
    "aws-sdk": "^2.496.0",
    "aws-serverless-express": "^3.3.6",
    "body-parser": "^1.19.0",
    "boom": "^7.3.0",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^8.0.0",
    "express": "^4.17.1",
    "express-jwt": "^5.3.1",
    "express-unless": "^0.5.0",
    "express-validator": "^6.1.1",
    "formidable": "^1.2.1",
    "jwks-rsa": "^1.6.0",
    "lodash": "^4.17.15",
    "loglevel": "^1.6.3",
    "moment": "^2.24.0",
    "moment-timezone": "^0.5.26",
    "nocache": "^2.1.0",
    "partial.lenses": "^14.17.0",
    "pg-monitor": "^1.1.0",
    "pg-promise": "^8.7.5",
    "rambda": "^2.12.0",
    "ramda": "^0.26.1",
    "ramda-debug": "^0.1.4",
    "request-debug": "^0.2.0",
    "request-promise": "^4.2.4",
    "traverse": "^0.6.6",
    "uuid": "^3.3.2",
    "winston": "^3.2.1"
  },
  "devDependencies": {
    "@types/boom": "^7.2.1",
    "@types/cors": "^2.8.5",
    "@types/dotenv": "^6.1.1",
    "@types/express": "^4.17.0",
    "@types/express-jwt": "0.0.42",
    "@types/lodash": "^4.14.136",
    "@types/mocha": "^5.2.7",
    "@types/moment-timezone": "^0.5.12",
    "@types/node": "^12.6.8",
    "@types/request-promise": "^4.1.44",
    "@types/shelljs": "^0.8.5",
    "@types/supertest": "^2.0.8",
    "@types/traverse": "^0.6.32",
    "@types/uuid": "^3.4.5",
    "chai": "^4.2.0",
    "command-line-args": "^5.1.1",
    "commander": "^2.20.0",
    "concurrently": "^4.1.1",
    "mocha": "^6.2.0",
    "nodemon": "^1.19.1",
    "shelljs": "^0.8.3",
    "superagent-binary-parser": "^1.0.1",
    "supertest": "^4.0.2",
    "ts-node": "^8.3.0",
    "tslint": "^5.18.0",
    "tslint-no-unused-expression-chai": "^0.1.4",
    "typescript": "^3.5.3"
  }
}
